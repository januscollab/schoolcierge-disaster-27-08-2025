# Docker Compose Override for Testing
# Usage: docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d

version: '3.8'

services:
  # Test-specific PostgreSQL configuration
  postgres:
    environment:
      # Create additional test database automatically
      POSTGRES_MULTIPLE_DATABASES: schoolcierge_dev,schoolcierge_test
    volumes:
      # Mount initialization script for test database
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/10-init-test.sql:ro
    healthcheck:
      # More aggressive health checks for testing
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # Test-specific Redis configuration  
  redis:
    # Use separate Redis database for tests
    command: >
      redis-server 
      --requirepass localdev123 
      --appendonly yes
      --databases 16
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      # More aggressive health checks for testing
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  # Test runner service (optional - for CI/CD)
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    container_name: schoolcierge-test-runner
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://schoolcierge_user:localdev123@postgres:5432/schoolcierge_test
      REDIS_URL: redis://:localdev123@redis:6379/1
      CI: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - test-results:/app/test-results
    command: npm run test:ci
    profiles:
      - test

volumes:
  test-results:
    driver: local